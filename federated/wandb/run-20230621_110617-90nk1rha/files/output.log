

epoch: 1, loss: 0.57, time: 2.87:   0%|‚ñè                                                                                           | 1/400 [00:02<19:04,  2.87s/it]
OrderedDict([('mf_embedding_user.weight', tensor([[-1.0691,  1.0459, -1.8389,  ..., -0.7348, -1.1999,  0.2150],
        [-0.4663,  0.0815, -0.1312,  ..., -0.9502, -1.3711, -0.3560],
        [-0.6711,  0.8906,  1.1411,  ...,  1.8664,  0.2926, -1.0826],
        ...,
        [ 0.1144,  1.6294,  0.6782,  ...,  0.3236,  0.4481,  1.2085],
        [-0.4712,  0.6582,  0.5702,  ...,  3.2120,  0.5813,  1.4309],
        [ 1.4728,  1.0278, -0.9377,  ..., -0.3259,  2.7171, -1.5148]],
       device='cuda:0')), ('mf_embedding_item.weight', tensor([[ 0.2740,  0.7786,  0.1713,  ..., -1.3704,  0.7174, -0.9703],
        [-0.8120, -0.1966,  1.0023,  ..., -1.1197, -0.2756,  0.1263],
        [ 1.1532,  0.0048,  0.9433,  ..., -0.0531, -1.2536,  0.4430],
        ...,
        [ 1.2349,  0.7442,  0.1758,  ..., -0.5118,  0.6072, -0.2802],
        [-0.2138, -0.5706, -2.1382,  ..., -0.3323,  0.2846,  0.1102],
        [-0.6464, -2.0452,  0.2908,  ..., -0.3711,  1.5974,  1.8497]],
       device='cuda:0')), ('mlp_embedding_user.weight', tensor([[ 0.2968, -2.2501,  0.1004,  ...,  1.0553,  0.5688,  0.8686],
        [ 0.4501, -1.8166,  1.5550,  ...,  0.7163,  1.9074,  0.5260],
        [-0.1979,  0.0499,  0.4487,  ...,  0.4475, -0.3970,  0.9652],
        ...,
        [-1.8152,  0.3996,  0.0208,  ...,  0.1815,  0.6250, -0.0039],
        [-0.2857,  0.3281, -0.5785,  ..., -0.4916,  1.7427, -0.4043],
        [ 0.1474,  1.2807, -0.7635,  ...,  0.9805, -1.4604,  0.3337]],
       device='cuda:0')), ('mlp_embedding_item.weight', tensor([[ 1.3936, -1.1307,  0.0705,  ..., -1.5077,  0.8627,  0.0135],
        [ 0.9049,  1.3740,  1.0293,  ..., -1.0202, -0.1021,  0.4487],
        [-2.0072, -0.0692, -1.3816,  ..., -0.5954,  0.8556,  0.5322],
        ...,
        [-1.0588, -0.1423,  0.7776,  ..., -0.7256, -0.4664, -1.1614],
        [ 1.0016, -0.5618, -0.5645,  ..., -0.3964,  1.4047,  0.9074],
        [ 0.7542, -1.9940,  0.2977,  ...,  1.2246,  0.0978,  0.2697]],
       device='cuda:0')), ('mlp.0.weight', tensor([[-0.0671,  0.1580,  0.0251,  ...,  0.1048, -0.0651,  0.1608],
        [ 0.1195, -0.0240,  0.0466,  ...,  0.1353, -0.1228,  0.1754],
        [ 0.1468, -0.0469,  0.0449,  ..., -0.1165, -0.0869,  0.0613],
        ...,
        [ 0.0676,  0.0963,  0.1512,  ...,  0.0403,  0.1542, -0.0696],
        [ 0.0656, -0.0055, -0.0234,  ..., -0.1415, -0.1762, -0.0402],
        [-0.0157,  0.0502,  0.0524,  ...,  0.1213,  0.1532, -0.1474]],
       device='cuda:0')), ('mlp.0.bias', tensor([-0.0799,  0.1544,  0.1143, -0.1282, -0.0978, -0.1618,  0.1111, -0.1428,
        -0.0861,  0.1688,  0.0771, -0.1599,  0.0816, -0.1363,  0.1569, -0.1397,
        -0.1280, -0.1341, -0.0394, -0.0996,  0.0146,  0.0799,  0.0449, -0.0602,
         0.0979,  0.0928,  0.1109,  0.0012, -0.1297,  0.0635,  0.0599, -0.1181],
       device='cuda:0')), ('mlp.2.weight', tensor([[ 1.1447e-01, -5.7481e-02, -1.0683e-01,  1.6932e-02, -1.5480e-02,
         -1.0478e-01,  1.2250e-01, -6.0977e-03,  1.4993e-02, -4.5669e-02,
          1.1862e-01, -9.4629e-02, -1.6913e-01,  4.7713e-02, -4.0135e-02,
          2.5306e-02,  1.6915e-01, -1.4911e-01, -1.3917e-01, -2.3897e-02,
         -6.6911e-03,  7.0161e-02, -1.6587e-01,  5.3264e-02,  7.6732e-03,
          1.3338e-01, -1.5377e-01,  8.9747e-02, -1.0437e-01,  1.1200e-01,
         -3.6522e-02, -4.7636e-02],
        [-1.3434e-01, -1.7409e-01,  1.2125e-01,  4.7509e-03, -6.7546e-02,
         -3.4158e-04,  6.2931e-02, -5.3531e-02, -8.4345e-02, -1.1703e-01,
          5.0994e-02, -6.7307e-02,  2.4434e-02,  1.2158e-01,  1.2490e-01,
          4.5237e-02, -1.1378e-01, -1.7312e-01,  7.1530e-02, -1.4485e-01,
         -8.2263e-02,  7.0035e-03, -1.6211e-01,  5.8124e-02,  2.4693e-02,
         -1.2658e-01,  9.7295e-02,  3.7053e-02,  9.2013e-02,  1.1475e-01,
         -1.3640e-01, -9.8455e-02],
        [-4.2571e-02,  4.8497e-02, -7.0240e-02, -1.3968e-01,  5.3662e-02,
         -9.8608e-03, -4.1737e-02,  5.7107e-02,  9.5036e-02,  7.1213e-02,
          1.1919e-01, -1.3879e-01, -7.2932e-03,  1.2287e-01, -6.7781e-02,
         -2.4941e-02, -7.1201e-03, -8.9504e-02, -1.1432e-01,  2.6151e-02,
         -7.1984e-02, -9.9416e-02, -3.6278e-02,  2.4103e-02, -1.4553e-01,
         -5.3023e-02,  1.4867e-01, -1.3279e-01, -9.2211e-02,  1.0447e-01,
         -1.4796e-02, -7.3909e-03],
        [-3.9472e-02, -1.0003e-01, -1.4564e-01,  1.7385e-01, -1.3668e-01,
         -1.4829e-01,  9.6147e-02, -4.3024e-02, -7.5504e-02,  8.0170e-02,
          2.1878e-02, -1.2466e-01, -6.0966e-02,  6.0199e-02,  2.3657e-02,
         -2.8513e-02, -1.7306e-01,  1.7194e-01,  4.5131e-02,  9.9081e-02,
         -2.8133e-03,  6.2419e-02,  1.4367e-01,  1.3003e-01, -1.6251e-01,
          1.6262e-01,  9.7144e-02, -3.1355e-02,  7.6453e-03, -1.7051e-01,
         -9.8117e-02,  9.7569e-02],
        [ 3.2608e-02, -2.6630e-02,  1.7069e-01,  5.1126e-02,  3.4305e-02,
         -1.3074e-02, -1.6816e-01, -8.0408e-02, -9.4996e-02, -2.8131e-02,
         -1.5240e-02,  1.6895e-01, -1.6369e-01,  5.9672e-02, -6.7790e-02,
          8.5099e-02,  5.3050e-02, -4.3790e-02,  1.3446e-01, -9.4431e-02,
         -1.6339e-01,  3.7436e-02,  8.2757e-02,  1.5647e-01,  1.4692e-01,
         -1.6427e-01, -8.8540e-02, -3.5063e-02,  1.6024e-01,  9.5660e-02,
         -8.7566e-02, -6.9324e-02],
        [-1.4418e-01, -1.2795e-01, -2.2054e-02, -9.4319e-02,  8.4409e-02,
         -1.1531e-01,  5.7619e-02, -1.2895e-01,  9.4226e-02,  1.3458e-01,
          1.7646e-01,  8.5110e-02,  1.0050e-02, -9.6350e-02,  2.0846e-03,
          2.4403e-02, -1.7805e-02, -1.7058e-02,  8.7558e-04,  1.4365e-01,
         -1.0344e-01, -1.1197e-01, -1.8253e-02,  1.5187e-01,  1.9957e-02,
          1.0102e-01,  3.9257e-03, -1.0959e-01, -2.6260e-03,  8.1934e-02,
          1.4753e-01, -6.2797e-02],
        [-1.1985e-01,  1.1126e-01, -3.6328e-02, -1.2939e-01, -1.3338e-01,
         -3.5452e-02, -7.8054e-02, -4.5750e-02,  9.2848e-02,  1.6042e-01,
          6.3102e-02,  6.4136e-02, -1.8673e-02,  5.1864e-02,  1.7054e-01,
         -9.9483e-02, -6.1425e-02,  1.0619e-01, -6.1740e-02, -3.2196e-02,
          1.1403e-01,  9.2288e-02, -1.3059e-01, -1.1917e-01,  1.6470e-01,
         -1.6366e-03,  9.4596e-02, -1.6242e-01,  1.5633e-01, -1.3716e-01,
         -1.4880e-01,  2.9659e-02],
        [ 7.7031e-03, -7.0175e-02, -3.7500e-02,  1.3030e-01, -1.7247e-01,
         -2.7915e-02, -5.8717e-02,  1.5408e-01, -1.6781e-01,  3.7064e-02,
         -6.9662e-02,  1.0579e-01, -4.2003e-02, -6.3020e-03,  1.6243e-01,
         -7.6300e-02,  8.0869e-02,  2.1234e-02, -1.1599e-01, -6.7319e-02,
         -1.6109e-01, -1.5257e-02,  4.8543e-03,  8.2974e-02, -7.5181e-02,
          2.6294e-02, -7.5729e-02,  1.3773e-01, -4.3766e-02, -8.4230e-02,
         -3.3090e-02, -1.4101e-01],
        [ 5.5969e-02, -1.1494e-02, -6.2003e-03,  1.5891e-01,  1.7298e-01,
          1.6946e-01,  1.1533e-01,  5.0585e-02, -1.8225e-02, -1.9763e-03,
         -1.1647e-01, -9.1146e-02, -3.7158e-02, -9.7146e-02,  1.5012e-01,
          8.6394e-02, -3.0084e-02, -1.7210e-01,  1.2834e-01, -1.5441e-01,
          1.3541e-01, -5.6557e-02, -2.2277e-02,  8.5767e-02, -1.7439e-01,
          8.9754e-02, -1.0440e-01, -1.7426e-01, -1.2757e-01, -2.6345e-02,
         -1.1341e-01, -1.7212e-01],
        [-6.5081e-03,  8.3160e-03,  3.3550e-03,  5.0745e-02,  1.5606e-02,
          1.7420e-01,  2.9906e-02,  1.5484e-01,  3.4704e-02,  1.1353e-01,
          5.7230e-02,  1.1066e-01,  1.0379e-01,  9.1972e-02,  1.3288e-01,
          6.2408e-02,  2.5311e-02, -2.0897e-02, -1.1611e-01,  4.2462e-03,
          8.7946e-03,  1.1721e-01, -2.6093e-02, -1.7538e-01,  5.1822e-03,
          1.0660e-01,  5.0614e-02, -1.5513e-01,  1.0229e-01, -7.4934e-02,
         -1.4181e-01, -1.1720e-01],
        [ 5.3417e-02,  3.0668e-03,  8.0213e-02, -5.5369e-02, -7.9326e-02,
         -7.2976e-02, -1.0453e-01,  1.3437e-02,  1.3517e-01, -3.0391e-02,
          1.2187e-01, -1.0481e-01,  3.7090e-02, -1.5088e-01,  6.6297e-02,
          9.0760e-02, -3.9415e-02,  4.9154e-02,  3.2610e-02, -1.5745e-01,
          1.1218e-01,  1.4380e-01, -3.2269e-02, -3.2340e-02,  1.1969e-01,
         -4.2812e-02,  1.1733e-01,  1.4169e-01,  1.1965e-01, -1.1443e-01,
          3.2616e-02, -9.3542e-02],
        [-6.8224e-02,  2.1122e-02,  3.9052e-02, -1.3656e-01,  1.5552e-02,
          9.1343e-02,  1.0719e-01,  1.6145e-01, -6.7864e-02, -1.5741e-01,
         -1.6545e-01, -1.0189e-01, -1.0837e-01,  6.8816e-02, -8.4045e-02,
          7.4462e-02,  1.5826e-01, -2.8182e-03,  1.3017e-02, -1.0578e-01,
          9.1442e-02, -1.7669e-01, -1.4870e-01, -8.1756e-03,  1.9480e-02,
         -7.2685e-03,  3.9766e-02,  1.1538e-01, -1.0114e-01,  9.7148e-02,
         -1.9866e-02, -1.1519e-04],
        [ 3.7485e-02, -1.1733e-01, -9.0668e-02, -2.1446e-02, -8.9861e-02,
         -9.9119e-02, -1.3167e-01,  1.3491e-01, -2.8013e-02, -5.8255e-02,
         -1.4703e-02,  1.5783e-01,  7.6911e-02,  3.3699e-02,  7.8848e-03,
          1.3692e-01,  1.1145e-02,  1.4726e-01,  6.0306e-02, -9.9038e-02,
         -1.1775e-01, -3.8430e-02,  1.5977e-01, -9.9364e-02, -4.2716e-02,
          1.3329e-01, -1.6602e-01,  1.2805e-02,  8.4407e-03, -3.5730e-02,
          1.5073e-01, -1.3062e-01],
        [-1.0762e-02, -7.5693e-02,  1.4358e-01, -7.1818e-02, -1.3678e-01,
          6.3389e-02,  1.5896e-01,  4.1212e-02, -1.3958e-01,  5.3716e-02,
          2.7842e-02,  3.1215e-02,  1.2089e-01,  1.6505e-01, -9.1799e-02,
         -1.4432e-01,  4.8492e-02, -1.5578e-02,  5.8685e-02,  1.6881e-01,
          1.1986e-01, -1.1010e-01, -1.5379e-01, -1.9992e-02, -6.5610e-02,
          1.4712e-01,  1.0871e-01, -6.4600e-02,  1.9441e-02, -1.1654e-01,
         -2.1883e-04,  5.2988e-02],
        [-1.4380e-01, -1.0125e-01, -1.7394e-01,  3.4862e-02, -7.1465e-02,
          1.4226e-01, -1.1298e-01, -6.8110e-02,  9.4260e-02,  4.5366e-02,
          9.3985e-02, -1.6164e-02,  4.3154e-02,  5.8796e-02,  5.8600e-02,
          6.4629e-02,  1.0220e-01, -1.0368e-02,  1.7615e-01, -1.5797e-01,
         -1.5147e-01,  1.6452e-01,  1.6235e-01,  1.5611e-02,  6.6012e-02,
          1.4289e-01,  1.6412e-01, -7.6573e-02,  5.8082e-02, -3.6841e-02,
         -8.0847e-02,  4.7473e-02],
        [-1.4568e-01,  1.5932e-02,  9.0600e-02,  3.5929e-02,  1.3983e-01,
         -1.7400e-01, -1.3482e-01, -1.9682e-02,  2.0443e-02, -6.5382e-02,
          1.5616e-01,  6.4447e-02, -6.4459e-02, -1.6569e-01, -6.3347e-02,
         -1.4242e-01,  1.7094e-01, -1.1080e-01, -1.5582e-01, -8.1208e-02,
         -9.0346e-02,  6.6849e-02,  4.6015e-02, -1.2575e-01, -1.1456e-02,
         -1.0083e-01, -1.5106e-01,  1.4246e-01, -1.0729e-01, -1.4182e-01,
         -4.2381e-02,  4.4475e-02]], device='cuda:0')), ('mlp.2.bias', tensor([-0.0304, -0.0186, -0.1085, -0.0465, -0.1124,  0.0431, -0.0078, -0.1076,
         0.0590, -0.1687,  0.0771, -0.0159,  0.0166, -0.1698,  0.1574, -0.0317],
       device='cuda:0')), ('mlp.4.weight', tensor([[-0.0928,  0.1061,  0.1814, -0.0121,  0.0946, -0.0205,  0.1993, -0.0602,
         -0.1387, -0.1492, -0.2357,  0.2431,  0.1841, -0.2235,  0.1929,  0.1200],
        [-0.1775, -0.0748, -0.0585, -0.1015,  0.1741, -0.2130, -0.1532,  0.0502,
          0.0618, -0.0046, -0.0668,  0.0638, -0.0014,  0.0233, -0.1820,  0.1779],
        [ 0.1685,  0.2193,  0.0404, -0.0271, -0.0218,  0.1159,  0.1957,  0.0671,
          0.1716,  0.0940, -0.0388, -0.0474, -0.1982,  0.2177,  0.1406,  0.0517],
        [ 0.0775,  0.1562, -0.0901, -0.0073, -0.1474,  0.2032, -0.0458,  0.1688,
          0.1984, -0.0382, -0.1730,  0.1433, -0.0377, -0.0335, -0.2105, -0.0670],
        [ 0.1311, -0.2355, -0.1313,  0.1615, -0.0592,  0.0786,  0.2179,  0.2020,
          0.0226,  0.1633,  0.0822,  0.2265,  0.0791,  0.1768, -0.0621,  0.2002],
        [ 0.1885, -0.0666, -0.0910, -0.2240,  0.2168, -0.1471, -0.1315, -0.1372,
          0.1774, -0.0804,  0.1901, -0.0355,  0.1047,  0.0884,  0.1957, -0.0209],
        [-0.1389, -0.0666, -0.0885, -0.0169, -0.2169,  0.2293, -0.0466, -0.1354,
          0.1007,  0.1635,  0.1509, -0.1567, -0.1796,  0.1637,  0.0015, -0.0940],
        [-0.0494,  0.1968, -0.1033,  0.0006, -0.1039, -0.2010, -0.1529, -0.0218,
         -0.0503,  0.0581, -0.1886, -0.1314, -0.2351, -0.0023, -0.1282,  0.0856]],
       device='cuda:0')), ('mlp.4.bias', tensor([ 1.3938e-01, -1.0188e-01, -1.6009e-01,  1.5751e-02,  2.0421e-01,
         1.9500e-01,  8.2970e-05,  1.8215e-01], device='cuda:0')), ('output_layer.weight', tensor([[ 0.2581,  0.1181,  0.3221, -0.3368, -0.1505,  0.0469,  0.0735, -0.2019]],
       device='cuda:0')), ('output_layer.bias', tensor([-0.3167], device='cuda:0'))])
------------
OrderedDict([('mf_embedding_user.weight', tensor([[-1.0691,  1.0459, -1.8389,  ..., -0.7348, -1.1999,  0.2150],
        [-0.4663,  0.0815, -0.1312,  ..., -0.9502, -1.3711, -0.3560],
        [-0.6711,  0.8906,  1.1411,  ...,  1.8664,  0.2926, -1.0826],
        ...,
        [ 0.1144,  1.6294,  0.6782,  ...,  0.3236,  0.4481,  1.2085],
        [-0.4712,  0.6582,  0.5702,  ...,  3.2120,  0.5813,  1.4309],
        [ 1.4728,  1.0278, -0.9377,  ..., -0.3259,  2.7171, -1.5148]],
       device='cuda:0')), ('mf_embedding_item.weight', tensor([[ 0.2740,  0.7786,  0.1713,  ..., -1.3704,  0.7174, -0.9703],
        [-0.8120, -0.1966,  1.0023,  ..., -1.1197, -0.2756,  0.1263],
        [ 1.1532,  0.0048,  0.9433,  ..., -0.0531, -1.2536,  0.4430],
        ...,
        [ 1.2349,  0.7442,  0.1758,  ..., -0.5118,  0.6072, -0.2802],
        [-0.2138, -0.5706, -2.1382,  ..., -0.3323,  0.2846,  0.1102],
        [-0.6464, -2.0452,  0.2908,  ..., -0.3711,  1.5974,  1.8497]],
       device='cuda:0')), ('mlp_embedding_user.weight', tensor([[ 0.2967, -2.2495,  0.1003,  ...,  1.0550,  0.5686,  0.8684],
        [ 0.4500, -1.8161,  1.5546,  ...,  0.7161,  1.9069,  0.5258],
        [-0.1979,  0.0499,  0.4486,  ...,  0.4474, -0.3969,  0.9650],
        ...,
        [-1.8147,  0.3995,  0.0208,  ...,  0.1814,  0.6248, -0.0039],
        [-0.2856,  0.3280, -0.5784,  ..., -0.4915,  1.7423, -0.4042],
        [ 0.1473,  1.2804, -0.7633,  ...,  0.9802, -1.4600,  0.3336]],
       device='cuda:0')), ('mlp_embedding_item.weight', tensor([[ 1.3946, -1.1313,  0.0724,  ..., -1.5071,  0.8624,  0.0177],
        [ 0.9061,  1.3754,  1.0314,  ..., -1.0213, -0.1041,  0.4493],
        [-2.0055, -0.0680, -1.3800,  ..., -0.5961,  0.8544,  0.5331],
        ...,
        [-1.0585, -0.1422,  0.7773,  ..., -0.7254, -0.4663, -1.1611],
        [ 1.0009, -0.5617, -0.5643,  ..., -0.3960,  1.4042,  0.9076],
        [ 0.7540, -1.9935,  0.2976,  ...,  1.2242,  0.0977,  0.2697]],
       device='cuda:0')), ('mlp.0.weight', tensor([[-0.0636,  0.1629,  0.0276,  ...,  0.1012, -0.0625,  0.1654],
        [ 0.1225, -0.0228,  0.0468,  ...,  0.1314, -0.1212,  0.1810],
        [ 0.1500, -0.0491,  0.0443,  ..., -0.1199, -0.0729,  0.0600],
        ...,
        [ 0.0606,  0.0877,  0.1438,  ...,  0.0398,  0.1672, -0.0660],
        [ 0.0688, -0.0075, -0.0244,  ..., -0.1433, -0.1748, -0.0419],
        [-0.0148,  0.0551,  0.0542,  ...,  0.1199,  0.1430, -0.1450]],
       device='cuda:0')), ('mlp.0.bias', tensor([-0.0721,  0.1567,  0.1291, -0.1178, -0.0825, -0.1609,  0.1320, -0.1250,
        -0.0981,  0.1719,  0.0750, -0.1623,  0.0823, -0.1329,  0.1614, -0.1397,
        -0.1312, -0.1352, -0.0451, -0.0864,  0.0342,  0.0668,  0.0342, -0.0504,
         0.0894,  0.1045,  0.1000, -0.0006, -0.1313,  0.0716,  0.0635, -0.1271],
       device='cuda:0')), ('mlp.2.weight', tensor([[ 1.2529e-01, -4.1598e-02, -8.5092e-02,  2.7363e-02, -3.9845e-03,
         -9.3178e-02,  1.4248e-01,  1.0759e-02,  2.4149e-02, -2.4515e-02,
          1.2226e-01, -9.2262e-02, -1.5895e-01,  6.3521e-02, -2.4348e-02,
          3.6550e-02,  1.8660e-01, -1.3649e-01, -1.3116e-01, -6.0738e-03,
          1.2811e-02,  8.3872e-02, -1.6170e-01,  7.3497e-02,  1.2930e-02,
          1.5139e-01, -1.4429e-01,  1.0076e-01, -1.0837e-01,  1.3253e-01,
         -3.2911e-02, -3.2482e-02],
        [-1.3650e-01, -1.7144e-01,  1.3264e-01,  8.4996e-03, -6.3616e-02,
          1.9065e-03,  7.2902e-02, -4.7854e-02, -8.2425e-02, -1.0842e-01,
          4.7129e-02, -7.1506e-02,  2.5797e-02,  1.2895e-01,  1.3115e-01,
          4.6306e-02, -1.1332e-01, -1.7362e-01,  7.2368e-02, -1.3556e-01,
         -7.7139e-02,  8.4849e-03, -1.6184e-01,  6.6051e-02,  2.4115e-02,
         -1.1532e-01,  9.8766e-02,  3.6280e-02,  8.6061e-02,  1.2542e-01,
         -1.3812e-01, -9.3526e-02],
        [-4.2175e-02,  4.6831e-02, -7.3740e-02, -1.3824e-01,  5.1092e-02,
         -9.2955e-03, -4.6146e-02,  5.7946e-02,  9.1695e-02,  6.7038e-02,
          1.1799e-01, -1.3822e-01, -8.8930e-03,  1.1927e-01, -7.4096e-02,
         -2.6301e-02, -1.0755e-02, -9.0522e-02, -1.1687e-01,  2.6105e-02,
         -7.2887e-02, -1.0290e-01, -3.8603e-02,  1.8652e-02, -1.4716e-01,
         -5.5800e-02,  1.4531e-01, -1.3214e-01, -9.1686e-02,  1.0028e-01,
         -1.6028e-02, -9.8964e-03],
        [-2.8933e-02, -7.9238e-02, -1.2426e-01,  1.8610e-01, -1.2176e-01,
         -1.3274e-01,  1.1651e-01, -2.7445e-02, -6.8318e-02,  1.0421e-01,
          2.0591e-02, -1.2067e-01, -4.6723e-02,  7.8474e-02,  4.1898e-02,
         -1.1687e-02, -1.5301e-01,  1.9042e-01,  5.3597e-02,  1.2261e-01,
          2.0822e-02,  8.0718e-02,  1.5875e-01,  1.4629e-01, -1.6386e-01,
          1.8286e-01,  1.1431e-01, -1.6713e-02, -1.9793e-03, -1.4954e-01,
         -8.4672e-02,  1.1552e-01],
        [ 3.4445e-02, -2.5435e-02,  1.6069e-01,  4.7785e-02,  3.5649e-02,
         -1.2627e-02, -1.7279e-01, -8.0888e-02, -1.0443e-01, -3.0879e-02,
         -1.0388e-02,  1.7365e-01, -1.6265e-01,  5.5649e-02, -7.6669e-02,
          8.4308e-02,  5.0191e-02, -4.3297e-02,  1.3123e-01, -9.7244e-02,
         -1.6332e-01,  2.9928e-02,  8.6338e-02,  1.4670e-01,  1.4444e-01,
         -1.6911e-01, -9.6323e-02, -3.5069e-02,  1.6378e-01,  8.5219e-02,
         -8.3951e-02, -7.5473e-02],
        [-1.4057e-01, -1.2053e-01, -7.3216e-03, -9.2885e-02,  9.2588e-02,
         -1.0993e-01,  7.1938e-02, -1.1753e-01,  9.8063e-02,  1.4539e-01,
          1.7171e-01,  8.2363e-02,  1.5162e-02, -8.6708e-02,  1.3154e-02,
          3.0442e-02, -7.8784e-03, -8.7942e-03,  4.0034e-03,  1.5525e-01,
         -9.2523e-02, -1.0906e-01, -1.5738e-02,  1.6594e-01,  1.8489e-02,
          1.1298e-01,  8.7719e-03, -1.0570e-01, -8.8947e-03,  9.5823e-02,
          1.5151e-01, -5.7852e-02],
        [-1.2397e-01,  9.9358e-02, -4.6917e-02, -1.3022e-01, -1.3809e-01,
         -4.3943e-02, -8.5935e-02, -4.6114e-02,  8.3320e-02,  1.4826e-01,
          5.6418e-02,  6.0609e-02, -2.5056e-02,  4.2947e-02,  1.6082e-01,
         -1.0875e-01, -6.8310e-02,  9.6794e-02, -6.5827e-02, -4.3931e-02,
          1.0328e-01,  8.1232e-02, -1.4108e-01, -1.2904e-01,  1.6366e-01,
         -9.6993e-03,  8.5148e-02, -1.6988e-01,  1.5723e-01, -1.4843e-01,
         -1.5923e-01,  1.9595e-02],
        [ 6.9530e-03, -7.0530e-02, -3.9688e-02,  1.2793e-01, -1.7322e-01,
         -2.8899e-02, -6.0378e-02,  1.5091e-01, -1.6714e-01,  3.7193e-02,
         -7.1217e-02,  1.0449e-01, -4.3599e-02, -6.2928e-03,  1.6216e-01,
         -7.6021e-02,  8.0252e-02,  2.1983e-02, -1.1699e-01, -6.8549e-02,
         -1.6030e-01, -1.6435e-02,  4.2187e-03,  8.3481e-02, -7.7391e-02,
          2.4131e-02, -7.3700e-02,  1.3644e-01, -4.3886e-02, -8.4003e-02,
         -3.3122e-02, -1.4311e-01],
        [ 6.1634e-02, -1.8123e-04,  8.8073e-03,  1.6446e-01,  1.8611e-01,
          1.7997e-01,  1.3055e-01,  6.1226e-02, -9.2424e-03,  1.1825e-02,
         -1.1719e-01, -8.7687e-02, -3.1094e-02, -8.5083e-02,  1.6600e-01,
          9.6997e-02, -1.6729e-02, -1.6220e-01,  1.3707e-01, -1.4155e-01,
          1.5025e-01, -4.6651e-02, -1.4993e-02,  1.0085e-01, -1.6965e-01,
          1.0379e-01, -9.2591e-02, -1.6469e-01, -1.2991e-01, -1.0690e-02,
         -1.0549e-01, -1.6188e-01],
        [ 3.6294e-03,  2.6187e-02,  2.2118e-02,  6.0899e-02,  2.2942e-02,
          1.8963e-01,  5.0703e-02,  1.6966e-01,  4.6678e-02,  1.3511e-01,
          6.2626e-02,  1.1141e-01,  1.1756e-01,  1.0777e-01,  1.5038e-01,
          7.7111e-02,  4.2611e-02, -5.4165e-03, -1.1097e-01,  2.4875e-02,
          2.9535e-02,  1.3237e-01, -1.3723e-02, -1.5518e-01,  3.6427e-03,
          1.2396e-01,  6.2687e-02, -1.4449e-01,  9.5031e-02, -5.3960e-02,
         -1.3280e-01, -1.0394e-01],
        [ 5.6952e-02,  6.9426e-03,  7.9663e-02, -5.1767e-02, -7.7647e-02,
         -6.9190e-02, -1.0334e-01,  1.5012e-02,  1.3598e-01, -3.0790e-02,
          1.3146e-01, -9.9466e-02,  3.9016e-02, -1.4954e-01,  6.7148e-02,
          9.3301e-02, -3.9975e-02,  4.8409e-02,  3.6715e-02, -1.5878e-01,
          1.1068e-01,  1.4611e-01, -2.7376e-02, -3.1157e-02,  1.2387e-01,
         -4.3324e-02,  1.2095e-01,  1.4113e-01,  1.2905e-01, -1.1506e-01,
          3.6072e-02, -8.6764e-02],
        [-6.2202e-02,  3.3221e-02,  5.6139e-02, -1.3030e-01,  2.6492e-02,
          9.9882e-02,  1.2308e-01,  1.7204e-01, -5.7859e-02, -1.4366e-01,
         -1.6410e-01, -1.0022e-01, -1.0022e-01,  8.3505e-02, -7.3278e-02,
          8.2850e-02,  1.7295e-01,  4.1204e-03,  1.6951e-02, -9.1399e-02,
          1.0572e-01, -1.6710e-01, -1.4353e-01,  8.4232e-03,  1.5670e-02,
          4.6590e-03,  4.7490e-02,  1.1951e-01, -1.0656e-01,  1.1379e-01,
         -1.4827e-02,  6.2534e-03],
        [ 3.4727e-02, -1.2286e-01, -9.2937e-02, -1.9233e-02, -9.0809e-02,
         -9.5568e-02, -1.3599e-01,  1.3743e-01, -3.1175e-02, -6.5234e-02,
         -9.1210e-03,  1.6255e-01,  7.5774e-02,  3.0545e-02,  6.3125e-03,
          1.3808e-01,  4.9582e-03,  1.3856e-01,  5.6641e-02, -1.0016e-01,
         -1.2527e-01, -4.1135e-02,  1.5322e-01, -9.9304e-02, -4.0061e-02,
          1.3234e-01, -1.6829e-01,  6.3839e-03,  1.2178e-02, -3.6194e-02,
          1.5115e-01, -1.3360e-01],
        [-3.5124e-03, -6.4683e-02,  1.5409e-01, -6.4082e-02, -1.3242e-01,
          6.7325e-02,  1.7107e-01,  5.0164e-02, -1.3142e-01,  6.7253e-02,
          2.9564e-02,  3.5756e-02,  1.2902e-01,  1.7644e-01, -8.1167e-02,
         -1.3751e-01,  5.9303e-02, -4.5052e-03,  6.4958e-02,  1.8258e-01,
          1.3333e-01, -9.7560e-02, -1.4534e-01, -8.9858e-03, -6.3077e-02,
          1.5750e-01,  1.1872e-01, -5.3654e-02,  1.7242e-02, -1.0362e-01,
          4.5243e-03,  6.5570e-02],
        [-1.4984e-01, -1.1536e-01, -1.8794e-01,  2.9495e-02, -7.9268e-02,
          1.3375e-01, -1.2284e-01, -6.9972e-02,  8.2092e-02,  3.2408e-02,
          9.1239e-02, -2.1265e-02,  3.8232e-02,  4.9057e-02,  4.7198e-02,
          5.2577e-02,  9.1561e-02, -2.0426e-02,  1.7179e-01, -1.7265e-01,
         -1.6402e-01,  1.5160e-01,  1.5093e-01,  3.9254e-03,  6.3980e-02,
          1.3374e-01,  1.5079e-01, -8.6535e-02,  6.1961e-02, -5.0129e-02,
         -9.1127e-02,  3.3528e-02],
        [-1.4556e-01,  1.5946e-02,  8.9076e-02,  3.5281e-02,  1.3787e-01,
         -1.7384e-01, -1.3562e-01, -2.1203e-02,  1.9822e-02, -6.6608e-02,
          1.5414e-01,  6.2453e-02, -6.5543e-02, -1.6649e-01, -6.2214e-02,
         -1.4203e-01,  1.7029e-01, -1.1099e-01, -1.5792e-01, -8.1229e-02,
         -9.0648e-02,  6.6188e-02,  4.5321e-02, -1.2550e-01, -1.0504e-02,
         -1.0016e-01, -1.5192e-01,  1.4183e-01, -1.1074e-01, -1.4044e-01,
         -4.2679e-02,  4.4856e-02]], device='cuda:0')), ('mlp.2.bias', tensor([-0.0091, -0.0097, -0.1128, -0.0229, -0.1209,  0.0538, -0.0193, -0.1083,
         0.0741, -0.1480,  0.0762, -0.0010,  0.0120, -0.1559,  0.1436, -0.0324],
       device='cuda:0')), ('mlp.4.weight', tensor([[-0.1096,  0.0903,  0.1784, -0.0270,  0.0880, -0.0342,  0.1869, -0.0602,
         -0.1518, -0.1632, -0.2475,  0.2289,  0.1823, -0.2383,  0.1809,  0.1239],
        [-0.1775, -0.0748, -0.0585, -0.1015,  0.1740, -0.2130, -0.1531,  0.0502,
          0.0618, -0.0046, -0.0668,  0.0637, -0.0014,  0.0233, -0.1820,  0.1779],
        [ 0.1497,  0.2033,  0.0398, -0.0432, -0.0229,  0.0978,  0.1894,  0.0671,
          0.1579,  0.0769, -0.0378, -0.0668, -0.1961,  0.2039,  0.1374,  0.0523],
        [ 0.1013,  0.1770, -0.0890,  0.0109, -0.1438,  0.2228, -0.0359,  0.1690,
          0.2147, -0.0202, -0.1698,  0.1661, -0.0432, -0.0148, -0.2036, -0.0717],
        [ 0.1566, -0.2128, -0.1295,  0.1862, -0.0545,  0.0990,  0.2310,  0.2012,
          0.0403,  0.1874,  0.0913,  0.2492,  0.0771,  0.2002, -0.0517,  0.1959],
        [ 0.1674, -0.0842, -0.0935, -0.2430,  0.2103, -0.1628, -0.1436, -0.1371,
          0.1614, -0.0998,  0.1782, -0.0531,  0.1029,  0.0691,  0.1839, -0.0170],
        [-0.1577, -0.0828, -0.0920, -0.0376, -0.2205,  0.2140, -0.0593, -0.1358,
          0.0855,  0.1434,  0.1399, -0.1712, -0.1816,  0.1436, -0.0105, -0.0905],
        [-0.0241,  0.2192, -0.1014,  0.0252, -0.0994, -0.1809, -0.1396, -0.0222,
         -0.0326,  0.0823, -0.1792, -0.1087, -0.2372,  0.0207, -0.1172,  0.0813]],
       device='cuda:0')), ('mlp.4.bias', tensor([ 0.1230, -0.1019, -0.1781,  0.0357,  0.2263,  0.1766, -0.0191,  0.2042],
       device='cuda:0')), ('output_layer.weight', tensor([[ 0.2440,  0.1180,  0.3048, -0.3611, -0.1753,  0.0280,  0.0533, -0.2262]],
epoch: 1, loss: 0.57, time: 2.87:   0%|‚ñè                                                                                           | 1/400 [00:06<46:10,  6.94s/it]
Traceback (most recent call last):
  File "src/main.py", line 91, in <module>
    main()
  File "src/main.py", line 72, in main
    trained_model = run_server(dataset, num_clients=args.c, epochs=args.epochs,
  File "/home/abenzaamia/MLP/federated/src/server.py", line 39, in run_server
    trained_weights = training_process(server_model, clients, num_clients, epochs, local_epochs, dataset, args)
  File "/home/abenzaamia/MLP/federated/src/fedmlp/train.py", line 66, in training_process
    w, loss = single_train_round(server_model, clients, local_epochs)
  File "/home/abenzaamia/MLP/federated/src/fedmlp/train.py", line 117, in single_train_round
    weights, loss = client.train(server_model_copy, local_epochs)
  File "/home/abenzaamia/MLP/federated/src/client.py", line 47, in train
    logits, loss = server_model(u, i, l)
  File "/home/abenzaamia/.venv/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/abenzaamia/MLP/federated/src/fedmlp/models.py", line 46, in forward
    loss = F.binary_cross_entropy_with_logits(logits, target)
  File "/home/abenzaamia/.venv/lib/python3.8/site-packages/torch/nn/functional.py", line 3165, in binary_cross_entropy_with_logits
    return torch.binary_cross_entropy_with_logits(input, target, weight, pos_weight, reduction_enum)
KeyboardInterrupt